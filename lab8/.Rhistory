###########################################################
# What is the most common temperature?
###########################################################
rownames(sort(table(data$temperature2), decreasing = TRUE))[1]
###########################################################
# Make a bar chart with the frequency table of temperatures?
# Is there anything that catches your attention?
###########################################################
barplot(table(data$temperature2))
#Yes. The frequency of 72 degree is exceptionally high.
# Data files
tmp = subset(x = data, select = c(id, home_team, home_score, away_team, away_score, total_score, diff_score, home_win, date, year, month, decade, temperature, humidity, wind_mph))
dir.create("cleandata")
for (param in c("1960s", "1970s", "1980s", "1990s", "2000s", "2010s")){
output = tmp[which(tmp$decade == param),]
file_name = sprintf("cleandata/nflweather%s.csv", param)
write_csv(x = output, path = file_name)
}
write_csv(x = tmp, path = "cleandata/nflweather.csv")
col_decade = vector(length = length(data$date))
col_decade[which(year >= 1960 & year < 1970)] = "1960s"
col_decade[which(year >= 1970 & year < 1980)] = "1970s"
col_decade[which(year >= 1980 & year < 1990)] = "1980s"
col_decade[which(year >= 1990 & year < 2000)] = "1990s"
col_decade[which(year >= 2000 & year < 2010)] = "2000s"
col_decade[which(year >= 2010)] = "2010s"
data$decade = as.factor(col_decade)
# Scores Inforamtion
# Create a column total_score that contains the total number
# of scored points in each game. In other words,
# the sum of home_score and away_score
total_score = data$home_score + data$away_score
data$total_score = total_score
# Create a column diff_score that indicates the difference of
# home_score and away_score. In other words, the subtraction
# of home_score and away_score
diff_score = data$home_score - data$away_score
data$diff_score = diff_score
# Create a column home_win that shows whether home_score is
# greater than away_score. This column will have logical
# values (TRUE or FALSE)
home_win = (data$home_score > data$away_score)
data$home_win = home_win
# Basic Exploration
summary(data$home_score)
summary(data$away_score)
summary(data$temperature)
summary(data$wind_mph)
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
data = read_csv(file = "~/Desktop/stats133/raw_nflweather.csv")
library("stringr")
detach("package:readr", unload=TRUE)
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
data = read_csv(file = "~/Desktop/stats133/raw_nflweather.csv")
# Frist contact
plot(home_score)
plot(data$home_score)
barplot(plot(data$home_score)
barplot(data$home_score)
plot(data$away_score)
plot(data$temperature)
plot(data$home_score)
plot(data$away_score)
plot(data$temperature)
plot(data$humidity)
plot(data$wind_mph)
pairs(data[, c("home_score", "away_score", "temperature",
plot(data$home_score)
plot(data$away_score)
plot(data$temperature)
plot(data$humidity)
plot(data$home_score)
plot(data$away_score)
plot(data$temperature)
plot(data$humidity)
plot(data$wind_mph)
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
data = read_csv(file = "~/Desktop/stats133/raw_nflweather.csv")
library("stringr")
#first insepction
str(data)
head(data)
tail(data)
col_humidity = data$humidity
col_umidity = gsub(pattern = "%", replacement = "", x = col_humidity)
col_humidity = as.numeric(col_humidity)
data$humidity = col_humidity
col_weather = data$weather
col_weather = unlist(str_extract_all(string = col_weather, pattern = "-?[[:digit:]]?[[:digit:]]?[[:digit:]] d"))
col_weather = unlist(gsub(pattern = " d", replacement = "", x = col_weather))
col_weather = as.numeric(col_weather)
data$temperature2 = col_weather
ext_weather = data$weather
ext_humidity = unlist(str_extract_all(string = ext_weather, pattern = " [[:digit:]]?[[:digit:]]?[[:digit:]]%"))
ext_humidity = gsub(pattern = "%", replacement = "", x = ext_humidity)
ext_humidity = str_trim(string = ext_humidity, side = "both")
ext_humidity = as.numeric(ext_humidity)
data[which(!is.na(data$humidity)), "humidity2"] = ext_humidity
data[which(is.na(data$humidity)), "humidity2"] = NA
ext_weather = data$weather
ext_wind = unlist(str_extract_all(string = ext_weather, pattern = "wind.+mph"))
ext_wind = gsub(pattern = "wind | mph", replacement = "", x = ext_wind)
ext_wind = as.numeric(ext_wind)
data[which(!is.na(data$wind_mph)), "wind2"] = ext_wind
data[which(is.na(data$wind_mph)), "wind2"] = NA
col_time = data$date
year = substring(col_time, first = nchar(col_time)-3, last = nchar(col_time))
data$year = as.numeric(year)
month = unlist(str_extract_all(string = col_time, pattern = "^[[:digit:]][[:digit:]]?"))
data$monthnum = as.numeric(month)
col_month = vector(length = length(data$date))
col_month[month == "1"] = "January"
col_month[month == "2"] = "Feburary"
col_month[month == "3"] = "March"
col_month[month == "4"] = "April"
col_month[month == "5"] = "May"
col_month[month == "6"] = "June"
col_month[month == "7"] = "July"
col_month[month == "8"] = "August"
col_month[month == "9"] = "September"
col_month[month == "10"] = "October"
col_month[month == "11"] = "November"
col_month[month == "12"] = "December"
data$month = as.factor(col_month)
# Create a column decade that indicates the corresponding decade
col_decade = vector(length = length(data$date))
col_decade[which(year >= 1960 & year < 1970)] = "1960s"
col_decade[which(year >= 1970 & year < 1980)] = "1970s"
col_decade[which(year >= 1980 & year < 1990)] = "1980s"
col_decade[which(year >= 1990 & year < 2000)] = "1990s"
col_decade[which(year >= 2000 & year < 2010)] = "2000s"
col_decade[which(year >= 2010)] = "2010s"
data$decade = as.factor(col_decade)
total_score = data$home_score + data$away_score
data$total_score = total_score
diff_score = data$home_score - data$away_score
data$diff_score = diff_score
home_win = (data$home_score > data$away_score)
data$home_win = home_win
summary(data$home_score)
summary(data$away_score)
summary(data$temperature)
summary(data$wind_mph)
plot(data$home_score)
plot(data$away_score)
plot(data$temperature)
plot(data$wind_mph)
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
data = read_csv(file = "~/Desktop/stats133/raw_nflweather.csv")
library("stringr")
###########################################################
# remove the percent symbol % from the values in
# column humidity and convert such values to numeric format
###########################################################
colHumidity = data$humidity
colHumidity = gsub(pattern = "%", replacement = "", x = colHumidity)
colHumidity = as.numeric(colHumidity)
data$humidity = colHumidity
colWeather = data$weather
colWeather = unlist(str_extract_all(string = colWeather, pattern = "-?[[:digit:]]?[[:digit:]]?[[:digit:]] d"))
colWeather = unlist(gsub(pattern = " d", replacement = "", x = colWeather))
colWeather = as.numeric(colWeather)
data$temperature2 = colWeather
extWeather = data$weather
extHumidity = unlist(str_extract_all(string = extWeather, pattern = " [[:digit:]]?[[:digit:]]?[[:digit:]]%"))
extHumidity = gsub(pattern = "%", replacement = "", x = extHumidity)
extHumidity = str_trim(string = extHumidity, side = "both")
extHumidity = as.numeric(extHumidity)
data[which(!is.na(data$humidity)), "humidity2"] = extHumidity
data[which(is.na(data$humidity)), "humidity2"] = NA
extWeather = data$weather
extWind = unlist(str_extract_all(string = extWeather, pattern = "wind.+mph"))
extWind = gsub(pattern = "wind | mph", replacement = "", x = extWind)
extWind = as.numeric(extWind)
data[which(!is.na(data$wind_mph)), "wind2"] = extWind
data[which(is.na(data$wind_mph)), "wind2"] = NA
colTime = data$date
year = substring(colTime, first = nchar(colTime)-3, last = nchar(colTime))
data$year = as.numeric(year)
month = unlist(str_extract_all(string = colTime, pattern = "^[[:digit:]][[:digit:]]?"))
data$monthnum = as.numeric(month)
monthEng = vector(length = length(data$date))
monthEng[month == "1"] = "January"
monthEng[month == "2"] = "Feburary"
monthEng[month == "3"] = "March"
monthEng[month == "4"] = "April"
monthEng[month == "5"] = "May"
monthEng[month == "6"] = "June"
monthEng[month == "7"] = "July"
monthEng[month == "8"] = "August"
monthEng[month == "9"] = "September"
monthEng[month == "10"] = "October"
monthEng[month == "11"] = "November"
monthEng[month == "12"] = "December"
data$month = as.factor(monthEng)
###########################################################
decadeEng = vector(length = length(data$date))
decadeEng[which(year >= 1960 & year < 1970)] = "1960s"
decadeEng[which(year >= 1970 & year < 1980)] = "1970s"
decadeEng[which(year >= 1980 & year < 1990)] = "1980s"
decadeEng[which(year >= 1990 & year < 2000)] = "1990s"
decadeEng[which(year >= 2000 & year < 2010)] = "2000s"
decadeEng[which(year >= 2010)] = "2010s"
data$decade = as.factor(decadeEng)
total_score = data$home_score + data$away_score
data$total_score = total_score
diff_score = data$home_score - data$away_score
data$diff_score = diff_score
home_win = (data$home_score > data$away_score)
data$home_win = home_win
summary(data$home_score)
summary(data$away_score)
summary(data$temperature)
summary(data$wind_mph)
pairs(data[, c("home_score", "away_score", "temperature", "humidity", "wind_mph")])
pairs(data[, c("home_score", "away_score", "temperature", "humidity", "wind_mph")])
###########################################################
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
plot(data$home_score)
pairs(data[, c("home_score", "away_score", "temperature",
"humidity", "wind_mph")])
min(data$temperature2)
barplot(table(data$temperature2))
barplot(table(data$temperature2))
??barplot
barplot(table(data$temperature2), xlim = NULL)
barplot(table(data$temperature2), xlim = F)
??barplot
barplot(table(data$temperature2), xlim = NULL)
barplot(table(data$temperature2), xlim = 100)
barplot(table(data$temperature2), xlim = NULL)
summary(data$temperature2)
barplot(table(data$temperature2), xlim = NULL)
rownames(sort(table(data$temperature2), decreasing = TRUE))[1]
sum(data$temperature2 < 0)
min(data$temperature2)
rownames(sort(table(data$home_score), decreasing = TRUE))[1]
rownames(sort(table(data$temperature2), decreasing = TRUE))[1]
sum(data$temperature2 < 0)
sum(data$temperature2 >= 90)
max(data$temperature2)
rownames(sort(table(data$away_score), decreasing = TRUE))[1]
max(data$temperature2)
library(readr)
data = read_csv("cleandata/nflweather.csv")
wincounts = aggregate(data[,  "home_win"], list(data$year), function(x) sum(x == TRUE)-sum(x == FALSE))
colnames(wincounts) = c("year", "win_diff")
graph = barplot(wincounts$win_diff, wincounts$year, main = "Difference between home
wins and home loses by year", names.arg = wincounts$year, las = 2)
# Average score points per year
library(ggplot2)
wincounts2 = aggregate(data[, c("home_score", "away_score")], list(data$year), mean)
colnames(wincounts2) = c("year", "home_score", "away_score")
ggplot(data = wincounts2) +
geom_line(aes(x = year, y = home_score, col = "red")) +
geom_point(aes(x = year, y = home_score, col = "red")) +
geom_line(aes(x = year, y = away_score, col = "blue")) +
geom_point(aes(x = year, y = away_score, col = "blue")) +
ylab("score") + scale_color_manual(values = c("red", "blue"),
name= "type",
labels = c("ave_homescore", "ave_awayscore")) +
ggtitle("Average score points per year") +
theme(legend.position = "top")
# my plot: pie chart
wincounts3 = aggregate(data[,  "home_win"], list(data$year), function(x) sum(x == TRUE)/length(x))
colnames(wincounts3) = c("year", "ratio")
tag = c("win more", "same", "lost more")
percentage = round(c(sum(wincounts3$ratio > 0.5)/nrow(wincounts3),
sum(wincounts$ratio == 0.5)/nrow(wincounts3),
sum(wincounts$ratio < 0.5)/nrow(wincounts3)), 4) * 100
Tags = paste(percentage, "%", tag, c(" than 50%", ""," than 50%"))
pie(c(sum(wincounts3$ratio > 0.5), sum(wincounts3$ratio == 0.5), sum(wincounts3$ratio < 0.5)),
labels = Tags, radius = 8, col = c("red", "green", "yellow"),
main = "Percentage of Home Team Winning More Between 1960s And 2010s")
# 2. Has the total number of scored points per game changed over time?
library(readr)
data = read_csv("cleandata/nflweather.csv")
wincounts = aggregate(data[,  "home_win"], list(data$year), function(x) sum(x == TRUE)-sum(x == FALSE))
colnames(wincounts) = c("year", "win_diff")
graph = barplot(wincounts$win_diff, wincounts$year, main = "Difference between home
wins and home loses by year", names.arg = wincounts$year, las = 2)
# Average score points per year
source('~/Desktop/stats133/data clearing and prepation copy.R')
source('~/Desktop/stats133/data clearing and prepation copy.R')
source('~/Desktop/stats133/data clearing and prepation copy.R')
knit('myfile.rmd', tangle=TRUE)
source('data clearing and prepation copy2.R')
setwd("~/Desktop/stats133")
??kint
??knit
setwd("~/Desktop/stats133")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
# name: Zhiqiang Liao
# ID: 24229382
############################################################
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/Desktop/untitled folder/11data_cleaning.R')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
data = read_csv(file = "~/Desktop/stats133/raw_nflweather.csv")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
??scource
clear
close
getwd()
setwd(~/Desktop/stats133/lab11) # Replace dir with a path.
setwd('/Desktop/stats133/lab11') # Replace dir with a path.
setwd('file = "~/Desktop/stats133/raw_nflweather.csv") # Replace dir with a path.
```
setwd(file = "~/Desktop/stats133/raw_nflweather.csv") # Replace dir with a path.
setwd(file = "~/Desktop/stats133/raw_nflweather.csv") # Replace dir with a path.
```
setwd('/Desktop/stats133/raw_nflweather.csv') # Replace dir with a path.
setwd('/Desktop/stats133/raw_nflweather') # Replace dir with a path.
setwd('/Desktop/stats133/raw_nflweather') # Replace dir with a path.
setwd('/Desktop/stats133/raw_nflweather.csv') # Replace dir with a path.
setwd("~/Desktop/stats133")
setwd('/Desktop/stats133/raw_nflweather.csv') # Replace dir with a path.
setwd('/Desktop/stats133/raw_nflweather') # Replace dir with a path.
setwd("~/")
setwd('/Desktop/stats133/raw_nflweather') # Replace dir with a path.
setwd('/Desktop/stats133/lab11') # Replace dir with a path.
setwd('/Desktop/stats133/lab11') # Replace dir with a path.
??setwd
getwd()
setwd('/Users/Moey/Desktop/stats133/lab11') # Replace dir with a path.
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
getwd()
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
setwd("~/Desktop/stats133")
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
```
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
getwd()
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
setwd('/Users/Moey/Desktop/stats133/lab11.rmd') # Replace dir with a path.
setwd('/Users/Moey/Desktop/stats133/lab11.Rmd') # Replace dir with a path.
setwd("/Users/Moey/Desktop/stats133/lab11") # Replace dir with a path.
setwd("Users/Moey/Desktop/stats133/lab11") # Replace dir with a path.
setwd("/Users/Moey/Desktop/stats133/lab11") # Replace dir with a path.
getwd()
setwd("~/Desktop/stats133/lab11")
getwd()
setwd("/Users/Moey/Desktop/stats133/lab11") # Replace dir with a path.
file.create("test.txt")
cat('mkdir testdir', file = 'test2.txt')
cat('cp test2.txt testdir', file = 'test2.txt', append = TRUE)
cat('cd testdir', file = 'test2.txt', append = TRUE)
cat("print 'Done!'", file = 'test2.txt', append = TRUE)
cut -f 1,3 -d ',' stars.csv | sort -t ',' -k 2
cut -f 1,3 -d ',' stars.csv | sort -t ',' -k 2
sampledata <- read.csv('~/Desktop/DASH Data Entry (Responses) - Form Responses 1.csv')
nrow(parcific)
nrow(pacific)
summary(region$pacific)
hist()
close
p<-seq(from -3, to 3, by 0.001)
p<-seq(from=-3, to=3, by=0.001)
loglik<-ln(1/8) + (-|p+2.354|-|p+0.645|-|p-2.039|)
?absolute
loglik<-ln(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039)
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(0,1))
loglik<-ln(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
loglik<-log(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(0,1))
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(0,1))
p<-seq(from=-100, to=100, by=0.001)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(0,1))
p<-seq(from=-100, to=100, by=0.001)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-5,5))
p<-seq(from=-20, to=1, by=0.001)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-5,5))
p<-seq(from=-20, to=1, by=0.001)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-3,3))
p<-seq(from=-10, to=1, by=0.001)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-3,3))
p<-seq(from=-10, to=1, by=0.1)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-3,3))
p<-seq(from=-5, to=1, by=0.1)
loglik<-log10(1/8) + (-abs(p+2.354)-abs(p+0.645)-abs(p-2.039))
plot(p, loglik, xlab=""
,ylab=""
,type="l"
,xlim=c(-3,3))
sp500Historical <- read.csv("~/Downloads/sp500Historical.csv")
View(sp500Historical)
clear
clear
sp500Historical <- read.csv("~/Downloads/sp500Historical.csv")
oberve
observe
obs
sp500Historical <- read.csv("~/Downloads/sp500Historical.csv")
View(cars)
View(datt)
View(df)
View(dists)
sp500Historical <- read.csv("~/Downloads/sp500Historical.csv")
View(sp500Historical)
View(sp500Historical)
bodytemp.csv <- read.csv("~/Downloads/bodytemp.csv")
View(bodytemp.csv)
sum
means.male <-apply(temperature, gender = 1,mean )
bodytemp <- read.csv("bodytemp.csv")
bodytemp.csv <- read.csv("~/Downloads/bodytemp.csv")
#males
male <- bodytemp[which(bodytemp$gender == 1),]
male <- temperature[which(bodytemp$gender == 1),]
View(bodytemp.csv)
bodytemp.csv <- read.csv("~/Downloads/bodytemp.csv")
bodytemp <- read.csv("bodytemp.csv")
bodytemp.csv <- read.csv("~/Downloads/bodytemp.csv")
bodytemp <- read.csv("bodytemp.csv")
bodytemp <- read.csv("bodytemp.csv")
bodytemp <- read.csv("bodytemp.csv")
clear
R-3.3.1.pkg
pkgutil --check-signature R-3.3.1.pkg
pkgutil --check-signature R-3.3.1.pkg
pkgutil --check-signature R-3.3.1.pkg
shiny::runApp('lab03/lab8')
runApp('lab03/lab8')
Advertising <- read.csv ("Advertising.csv")
Advertising <- Advertising[, 2:5]
Advertising <- read.csv ("Advertising.csv")
getwd
getwd()
setwd("~/lab03/lab8")
runApp()
Advertising <- read.csv ("Advertising.csv")
Advertising <- Advertising[, 2:5]
head(Advertising)
library(shiny)
ui <- fluidPage(
headerPanel("Simple Linear Regression on Sales"),
sidebarLayout(
sidebarPanel(
selectInput('media', 'Explantory Variable',
choices = c("TV", "Radio", "Newspaper"))),
mainPanel(
plotOutput("scatterplot")
)
)
)
erver <- function(input, output) {
selectedData <- reactive ({
Advertising[, c(input$media, Sales)]
})
output$scatterPlot <- renderPlot({
plot(Advertising[, input$media],
Advertising$Sales,
xlab = input$media,
ylab = "Sales",
col= "black",
pch = 20, cex =0.8)
})
}
runApp()
runApp()
